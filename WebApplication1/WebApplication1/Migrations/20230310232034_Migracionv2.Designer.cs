// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.dbcontext;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230310232034_Migracionv2")]
    partial class Migracionv2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CitaMotivoCita", b =>
                {
                    b.Property<int>("CitasIdCita")
                        .HasColumnType("int");

                    b.Property<int>("MotivosCitaIdMotivoCita")
                        .HasColumnType("int");

                    b.HasKey("CitasIdCita", "MotivosCitaIdMotivoCita");

                    b.HasIndex("MotivosCitaIdMotivoCita");

                    b.ToTable("CitaMotivoCita");
                });

            modelBuilder.Entity("WebApplication1.Models.Cita", b =>
                {
                    b.Property<int>("IdCita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCita"));

                    b.Property<DateTime>("FechaCita")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("IdCita");

                    b.HasIndex("PersonaId");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("WebApplication1.Models.CitaMotivoCita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CitaId")
                        .HasColumnType("int");

                    b.Property<int>("MotivocitaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CitaId");

                    b.HasIndex("MotivocitaId");

                    b.ToTable("CitaMotivosCita");
                });

            modelBuilder.Entity("WebApplication1.Models.Login", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("login");
                });

            modelBuilder.Entity("WebApplication1.Models.MotivoCita", b =>
                {
                    b.Property<int>("IdMotivoCita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMotivoCita"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMotivoCita");

                    b.ToTable("MotivosCita");
                });

            modelBuilder.Entity("WebApplication1.Models.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("persona");
                });

            modelBuilder.Entity("CitaMotivoCita", b =>
                {
                    b.HasOne("WebApplication1.Models.Cita", null)
                        .WithMany()
                        .HasForeignKey("CitasIdCita")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.MotivoCita", null)
                        .WithMany()
                        .HasForeignKey("MotivosCitaIdMotivoCita")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Models.Cita", b =>
                {
                    b.HasOne("WebApplication1.Models.Persona", "Persona")
                        .WithMany("Citas")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("WebApplication1.Models.CitaMotivoCita", b =>
                {
                    b.HasOne("WebApplication1.Models.Cita", "CitaIdNavigation")
                        .WithMany("CitaMotivocita")
                        .HasForeignKey("CitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.MotivoCita", "MotivocitaIdNavigation")
                        .WithMany("CitaMotivocita")
                        .HasForeignKey("MotivocitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CitaIdNavigation");

                    b.Navigation("MotivocitaIdNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.Cita", b =>
                {
                    b.Navigation("CitaMotivocita");
                });

            modelBuilder.Entity("WebApplication1.Models.MotivoCita", b =>
                {
                    b.Navigation("CitaMotivocita");
                });

            modelBuilder.Entity("WebApplication1.Models.Persona", b =>
                {
                    b.Navigation("Citas");
                });
#pragma warning restore 612, 618
        }
    }
}
